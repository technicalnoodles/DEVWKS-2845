"use strict";(self.webpackChunklambda_docs=self.webpackChunklambda_docs||[]).push([[722],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(a),h=r,k=p["".concat(d,".").concat(h)]||p[h]||m[h]||o;return a?n.createElement(k,i(i({ref:t},c),{},{components:a})):n.createElement(k,i({ref:t},c))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=h;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},547:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:2},i="Using the Meraki API & Webhooks",l={unversionedId:"meraki-docs/meraki-api",id:"meraki-docs/meraki-api",title:"Using the Meraki API & Webhooks",description:"We first need to create a webhook template and then use the Meraki API to push the webhook template to the Dashboard.",source:"@site/docs/meraki-docs/02-meraki-api.mdx",sourceDirName:"meraki-docs",slug:"/meraki-docs/meraki-api",permalink:"/DEVWKS-2845/meraki-docs/meraki-api",draft:!1,editUrl:"https://cisco.com/docs/meraki-docs/02-meraki-api.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Create & Save Meraki API key, ORG ID, and Network",permalink:"/DEVWKS-2845/meraki-docs/meraki"},next:{title:"Lambda Function",permalink:"/DEVWKS-2845/category/lambda-function"}},d={},s=[{value:"Create Webhook Template",id:"create-webhook-template",level:2},{value:"Upload the Template",id:"upload-the-template",level:2}],c={toc:s};function p(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-the-meraki-api--webhooks"},"Using the Meraki API & Webhooks"),(0,r.kt)("p",null,"We first need to create a webhook template and then use the Meraki API to push the webhook template to the Dashboard."),(0,r.kt)("h2",{id:"create-webhook-template"},"Create Webhook Template"),(0,r.kt)("p",null,"Since we have the API key and Organization ID from the Meraki Dashboard, let's create the custom webhook template. Go to the ",(0,r.kt)("a",{parentName:"p",href:"https://webhook-builder-vpfmunhy6a-uc.a.run.app/"},"webhook builder")),(0,r.kt)("p",null,"Once there we need to load a pre-done template. We can do this by changing the dropdown on the left side that say ",(0,r.kt)("inlineCode",{parentName:"p"},"Templates")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"Meraki"),". It should now look like the below:",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("img",{alt:"change template",src:a(9386).Z,width:"790",height:"299"})),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"Body Template"),", the JSON should look like the below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"showLineNumbers",showLineNumbers:!0},'{\n"version": "0.1",\n"sharedSecret": "{{sharedSecret}}",\n"sentAt": "{{sentAt}}",\n"organizationId": "{{organizationId}}",\n"organizationName": "{{organizationName}}",\n"organizationUrl": "{{organizationUrl}}",\n"networkId": "{{networkId}}",\n"networkName": "{{networkName}}",\n"networkUrl": "{{networkUrl}}",\n"networkTags": {{ networkTags | jsonify }},\n"deviceSerial": "{{deviceSerial}}",\n"deviceMac": "{{deviceMac}}",\n"deviceName": "{{deviceName}}",\n"deviceUrl": "{{deviceUrl}}",\n"deviceTags": {{ deviceTags | jsonify }},\n"deviceModel": "{{deviceModel}}",\n"alertId": "{{alertId}}",\n"alertType": "{{alertType}}",\n"alertTypeId": "{{alertTypeId}}",\n"alertLevel": "{{alertLevel}}",\n"occurredAt": "{{occurredAt}}",\n"alertData": {{ alertData | jsonify }}\n}\n')),(0,r.kt)("p",null,"However, we need to modify this a bit to get some information we need for our Lambda function to process it."),(0,r.kt)("p",null,"We need to remove the red highlighted lines below and add the green ones."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"showLineNumbers",showLineNumbers:!0},'{\n"version": "0.1",\n//remove-line\n"sharedSecret": "{{sharedSecret}}",\n"sentAt": "{{sentAt}}",\n"organizationId": "{{organizationId}}",\n"organizationName": "{{organizationName}}",\n"organizationUrl": "{{organizationUrl}}",\n"networkId": "{{networkId}}",\n"networkName": "{{networkName}}",\n"networkUrl": "{{networkUrl}}",\n"networkTags": {{ networkTags | jsonify }},\n//remove-line\n"deviceSerial": "{{deviceSerial}}",\n//add-line\n"deviceSerial": "Q2EW-CTL2-MQRL",\n"deviceMac": "{{deviceMac}}",\n"deviceName": "{{deviceName}}",\n"deviceUrl": "{{deviceUrl}}",\n"deviceTags": {{ deviceTags | jsonify }},\n"deviceModel": "{{deviceModel}}",\n"alertId": "{{alertId}}",\n"alertType": "{{alertType}}",\n"alertTypeId": "{{alertTypeId}}",\n"alertLevel": "{{alertLevel}}",\n"occurredAt": "{{occurredAt}}",\n//remove-line\n"alertData": {{ alertData | jsonify }}\n//add-line\n"alertData": {\n    //add-line\n    "portNum": attendee-number,\n    //add-line\n    "description": "Switch port is down",\n    //add-line\n    "status": "down",\n    //add-line\n    "prevStatus": "100 Gbps",\n    //add-line\n    "portDesc": "Corp Access"\n    //add-line\n  }\n}\n')),(0,r.kt)("p",null,"We changed the device serial to be a serial number that is in our organization and added some data to the alert data to simulate a port going down. Please replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"attendee-number")," with the number of the username. ",(0,r.kt)("inlineCode",{parentName:"p"},"Trainee5")," would use the number ",(0,r.kt)("inlineCode",{parentName:"p"},"5")," as the port."),(0,r.kt)("p",null,"We are doing this because we do not have 20 switches to put into each attendee network and this will make it so we do not have to wait for the alert timer to go off for a port going down."),(0,r.kt)("p",null,"After this data has been input into the ",(0,r.kt)("inlineCode",{parentName:"p"},"Body Template")," we can go to the right side and select ",(0,r.kt)("inlineCode",{parentName:"p"},"Meraki API Preview")," and copy the Meraki API Request Body`."),(0,r.kt)("p",null,"It should look similar to what is below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"showLineNumbers",showLineNumbers:!0},'{\n    "name": "Meraki",\n    "headers": "",\n    "body": "{\\n\\"version\\": \\"0.1\\",\\n\\"sentAt\\": \\"{{sentAt}}\\",\\n\\"organizationId\\": \\"{{organizationId}}\\",\\n\\"organizationName\\": \\"{{organizationName}}\\",\\n\\"organizationUrl\\": \\"{{organizationUrl}}\\",\\n\\"networkId\\": \\"{{networkId}}\\",\\n\\"networkName\\": \\"{{networkName}}\\",\\n\\"networkUrl\\": \\"{{networkUrl}}\\",\\n\\"networkTags\\": {{ networkTags | jsonify }},\\n\\"deviceSerial\\": \\"Q2EW-CTL2-MQRL\\",\\n\\"deviceMac\\": \\"{{deviceMac}}\\",\\n\\"deviceName\\": \\"{{deviceName}}\\",\\n\\"deviceUrl\\": \\"{{deviceUrl}}\\",\\n\\"deviceTags\\": {{ deviceTags | jsonify }},\\n\\"deviceModel\\": \\"{{deviceModel}}\\",\\n\\"alertId\\": \\"{{alertId}}\\",\\n\\"alertType\\": \\"{{alertType}}\\",\\n\\"alertTypeId\\": \\"{{alertTypeId}}\\",\\n\\"alertLevel\\": \\"{{alertLevel}}\\",\\n\\"occurredAt\\": \\"{{occurredAt}}\\",\\n\\"alertData\\": {\\n    \\"portNum\\": 3,\\n    \\"description\\": \\"Switch port is down\\",\\n    \\"status\\": \\"down\\",\\n    \\"prevStatus\\": \\"100 Gbps\\",\\n    \\"portDesc\\": \\"Corp Access\\"\\n  }\\n}\\n"\n}\n')),(0,r.kt)("p",null,"However, there are some things we need changed. Take the body and paste it into a text file. Then remove the ",(0,r.kt)("inlineCode",{parentName:"p"},"headers")," section and change the ",(0,r.kt)("inlineCode",{parentName:"p"},"name"),". Please make the name the same as your login username. Then we need to remove the ",(0,r.kt)("inlineCode",{parentName:"p"},"\\n")," characters. To remove those characters you can do a find in the document for ",(0,r.kt)("inlineCode",{parentName:"p"},"\\n")," and then a replace all with a space."),(0,r.kt)("p",null,"It should look like the below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"showLineNumbers",showLineNumbers:!0},'{\n    "name": "rymaclen",\n    "body": "{\\"version\\": \\"0.1\\",\\"sentAt\\": \\"{{sentAt}}\\",\\"organizationId\\": \\"{{organizationId}}\\",\\"organizationName\\": \\"{{organizationName}}\\",\\"organizationUrl\\": \\"{{organizationUrl}}\\",\\"networkId\\": \\"{{networkId}}\\",\\"networkName\\": \\"{{networkName}}\\",\\"networkUrl\\": \\"{{networkUrl}}\\",\\"networkTags\\": {{ networkTags | jsonify }},\\"deviceSerial\\": \\"Q2EW-CTL2-MQRL\\",\\"deviceMac\\": \\"{{deviceMac}}\\",\\"deviceName\\": \\"{{deviceName}}\\",\\"deviceUrl\\": \\"{{deviceUrl}}\\",\\"deviceTags\\": {{ deviceTags | jsonify }},\\"deviceModel\\": \\"{{deviceModel}}\\",\\"alertId\\": \\"{{alertId}}\\",\\"alertType\\": \\"{{alertType}}\\",\\"alertTypeId\\": \\"{{alertTypeId}}\\",\\"alertLevel\\": \\"{{alertLevel}}\\",\\"occurredAt\\": \\"{{occurredAt}}\\",\\"alertData\\": {    \\"portNum\\": 3,    \\"description\\": \\"Switch port is down\\",    \\"status\\": \\"down\\",    \\"prevStatus\\": \\"100 Gbps\\",    \\"portDesc\\": \\"Corp Access\\"  }}"\n}\n')),(0,r.kt)("p",null,"This is our completed webhook template. Now we can upload the template to the Meraki Dashboard."),(0,r.kt)("h2",{id:"upload-the-template"},"Upload the Template"),(0,r.kt)("p",null,"To upload the template, we need to use the below curl command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl https://api.meraki.com/api/v1/networks/network-id-here/webhooks/payloadTemplates --header "Content-Type: application/json" --header "Accept: application/json" --header "X-Cisco-Meraki-API-Key: api-key-here" --data \'template-data\'\n')),(0,r.kt)("p",null,"Please replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"network-id-here")," with the network ID we obtained saved. Then do the same with the ",(0,r.kt)("inlineCode",{parentName:"p"},"api-key-here"),". Where it says ",(0,r.kt)("inlineCode",{parentName:"p"},"template data"),". Please paste the template between the two quotes. It should look similar to the below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl https://api.meraki.com/api/v1/networks/network-id-here/webhooks/payloadTemplates --header "Content-Type: application/json" --header "Accept: application/json" --header "X-Cisco-Meraki-API-Key: api-key-here" --data \'{\n    "name": "rymaclen",\n    "body": "{\\"version\\": \\"0.1\\",\\"sentAt\\": \\"{{sentAt}}\\",\\"organizationId\\": \\"{{organizationId}}\\",\\"organizationName\\": \\"{{organizationName}}\\",\\"organizationUrl\\": \\"{{organizationUrl}}\\",\\"networkId\\": \\"{{networkId}}\\",\\"networkName\\": \\"{{networkName}}\\",\\"networkUrl\\": \\"{{networkUrl}}\\",\\"networkTags\\": {{ networkTags | jsonify }},\\"deviceSerial\\": \\"Q2EW-CTL2-MQRL\\",\\"deviceMac\\": \\"{{deviceMac}}\\",\\"deviceName\\": \\"{{deviceName}}\\",\\"deviceUrl\\": \\"{{deviceUrl}}\\",\\"deviceTags\\": {{ deviceTags | jsonify }},\\"deviceModel\\": \\"{{deviceModel}}\\",\\"alertId\\": \\"{{alertId}}\\",\\"alertType\\": \\"{{alertType}}\\",\\"alertTypeId\\": \\"{{alertTypeId}}\\",\\"alertLevel\\": \\"{{alertLevel}}\\",\\"occurredAt\\": \\"{{occurredAt}}\\",\\"alertData\\": {    \\"portNum\\": 3,    \\"description\\": \\"Switch port is down\\",    \\"status\\": \\"down\\",    \\"prevStatus\\": \\"100 Gbps\\",    \\"portDesc\\": \\"Corp Access\\"  }}"\n}\'\n')),(0,r.kt)("p",null,"Now, you can copy this command this command and run it in the terminal. You should get back a response like the below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{"payloadTemplateId":"wpt_3044","type":"custom","name":"Meraki-tet-v001","headers":[],"body":"{\\"version\\": \\"0.1\\",\\"sharedSecret\\": \\"{{sharedSecret}}\\",\\"sentAt\\": \\"{{sentAt}}\\",\\"organizationId\\": \\"{{organizationId}}\\",\\"organizationName\\": \\"{{organizationName}}\\",\\"organizationUrl\\": \\"{{organizationUrl}}\\",\\"networkId\\": \\"{{networkId}}\\",\\"networkName\\": \\"{{networkName}}\\",\\"networkUrl\\": \\"{{networkUrl}}\\",\\"networkTags\\": {{ networkTags | jsonify }},\\"deviceSerial\\": \\"{{deviceSerial}}\\",\\"deviceMac\\": \\"{{deviceMac}}\\",\\"deviceName\\": \\"{{deviceName}}\\",\\"deviceUrl\\": \\"{{deviceUrl}}\\",\\"deviceTags\\": {{ deviceTags | jsonify }},\\"deviceModel\\": \\"{{deviceModel}}\\",\\"alertId\\": \\"{{alertId}}\\",\\"alertType\\": \\"{{alertType}}\\",\\"alertTypeId\\": \\"{{alertTypeId}}\\",\\"alertLevel\\": \\"{{alertLevel}}\\",\\"occurredAt\\": \\"{{occurredAt}}\\",\\"alertData\\": {    \\"portNum\\": 2,    \\"description\\": \\"Switch port is down\\",    \\"status\\": \\"up\\",    \\"prevStatus\\": \\"100 Gbps\\",    \\"portDesc\\": \\"Corp Access\\"  }}"}%\n')),(0,r.kt)("p",null,"This means our webhook has been added to the Meraki Dashboard. We can go ahead and start creating the Lambda Function."))}p.isMDXComponent=!0},9386:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/change-template-a7b5e3ba3ae0fe144949fa8b4d02c7ff.png"}}]);