"use strict";(self.webpackChunklambda_docs=self.webpackChunklambda_docs||[]).push([[41],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),d=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=d(n),m=a,f=s["".concat(l,".").concat(m)]||s[m]||u[m]||r;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[s]="string"==typeof e?e:a,i[1]=p;for(var d=2;d<r;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5995:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var o=n(7462),a=(n(7294),n(3905));const r={sidebar_position:7},i="Upload the Lambda Function",p={unversionedId:"lambda-docs/package-function",id:"lambda-docs/package-function",title:"Upload the Lambda Function",description:"To upload our Lambda function we first need to package our code into a zip file. After we have packaged it properly, we may then upload the code.",source:"@site/docs/lambda-docs/package-function.mdx",sourceDirName:"lambda-docs",slug:"/lambda-docs/package-function",permalink:"/DEVWKS-2845/lambda-docs/package-function",draft:!1,editUrl:"https://cisco.com/docs/lambda-docs/package-function.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Function Code Part 3",permalink:"/DEVWKS-2845/lambda-docs/function-coding-p-3"},next:{title:"API Gateway",permalink:"/DEVWKS-2845/create-api-gateway"}},l={},d=[{value:"Zip Process",id:"zip-process",level:2},{value:"Upload to Lambda",id:"upload-to-lambda",level:2}],c={toc:d};function s(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"upload-the-lambda-function"},"Upload the Lambda Function"),(0,a.kt)("p",null,"To upload our Lambda function we first need to package our code into a zip file. After we have packaged it properly, we may then upload the code."),(0,a.kt)("h2",{id:"zip-process"},"Zip Process"),(0,a.kt)("p",null,"To zip up files, we need to go into the ",(0,a.kt)("strong",{parentName:"p"},"CLI")," and navigate to the ",(0,a.kt)("inlineCode",{parentName:"p"},"package")," directory. Then we will create a zip file within it. The commands are as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd package\nzip -r ../shutdownPort.zip .\n")),(0,a.kt)("p",null,"After we have created this zip file we need to add our ",(0,a.kt)("inlineCode",{parentName:"p"},"lambda_function.py")," file to the zip archive. This involves going up one directory and adding the file to the zip archive. The commands to do so are below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd ..\nzip shutdownPort.zip lambda_function.py\n")),(0,a.kt)("h2",{id:"upload-to-lambda"},"Upload to Lambda"),(0,a.kt)("p",null,"Back on the AWS Lambda page underneath the ",(0,a.kt)("strong",{parentName:"p"},"Function overview"),", make sure the ",(0,a.kt)("strong",{parentName:"p"},"Code")," tab is selected. Then look to the right and there should be an ",(0,a.kt)("strong",{parentName:"p"},"Upload from")," button. Select this button and then select ",(0,a.kt)("inlineCode",{parentName:"p"},".zip file"),". It should look similar to this image:\n",(0,a.kt)("img",{alt:"Drop down selector",src:n(1487).Z,width:"3196",height:"558"})),(0,a.kt)("p",null,"After selecting the ",(0,a.kt)("inlineCode",{parentName:"p"},".zip")," option, it will bring up an ",(0,a.kt)("inlineCode",{parentName:"p"},"Upload")," diaglog box. Upload the ",(0,a.kt)("inlineCode",{parentName:"p"},"shutdownPort.zip")," file using this diaglog box."),(0,a.kt)("p",null,"It will take a few minutes to unpack the file, but once it finishes you should see your completed file in the code editor like the below image:\n",(0,a.kt)("img",{alt:"Uploaded code",src:n(95).Z,width:"1784",height:"1130"})),(0,a.kt)("p",null,"Now that the code is uploaded we need to deploy it. Click on the ",(0,a.kt)("strong",{parentName:"p"},"Deploy")," button and wait for it to finish. We can now move onto creating the API Gateway."))}s.isMDXComponent=!0},95:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/uploaded-code-93892ee719dfd42ee4e495a5f1cd1959.png"},1487:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/zip-file-dropper-b6b0cff4ad5d475fb2abdb7610d0d40a.png"}}]);